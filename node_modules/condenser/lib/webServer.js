#!/usr/bin/env node
var util = require('util');
var http = require('http');

var connect = require('connect');
var server = http.createServer();
var wss = require(__dirname + '/ws.js')(server);
var msgCache = [];
var prefix = '(function (window, undefined) {\n\r\t"use strict";\n\r\t';
var suffix = '\n\r})(this);';
wss.on('send2client', function (msg) {
  msgCache.push(msg);
});
var app = connect()
  .use(connect.json())
  .use(connect.query())
  .use(connect.multipart())
  .use(connect.bodyParser())
  .use(connect.cookieParser())
  .use(connect.staticCache())
  .use(connect.urlencoded())
  .use(connect.favicon())
  .use('/comet', function (req, res) {
    var msg = req.body.msg;
    console.log('\x1B[32m=>%s \x1B[39m : \x1B[36m %s \x1B[39m', 'client_free', msg);
    wss.send2view(msg);
    msg = prefix + msgCache.splice(0).join(suffix + prefix) + suffix;
    // console.log('\x1B[32m<=%s \x1B[39m : \x1B[36m %s \x1B[39m', 'client_free', msg);
    res.setHeader('Content-Type', 'text/plain; charset=utf-8');
    res.write(msg);
    res.end();
  }).use(connect.static(__dirname + '/../web/'))
  .use(connect.directory(__dirname + '/../web/'))
  .use(connect.errorHandler());
server.on('request', function (req, res) {
  try {
    app(req, res);
  } catch (e) {
    res.end(e.stack);
  }
});
process.on('message', function (msg, socket) {
  process.nextTick(function tickHandle () {
    if ('socket' === msg) {
      socket.readable = socket.writable = true;
      socket.resume();
      server.connections++;
      socket.server = server;
      server.emit("connection", socket);
      socket.emit("connect");
      return;
    }
  });
});

if (!process.connected) {
  console.log('Only used by fork !');
}