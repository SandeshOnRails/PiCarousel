#!/usr/bin/env node
var fs = require('fs');
var http = require('http');
var url = require('url');

var path = require('path');
var worker = require('child_process').fork(__dirname + '/webServer.js', [], {
  silent: true
});
var server = require('net').createServer();
server.on('connection', function (socket) {
  if (worker && worker.send) {
    worker.send('socket', socket);
  }
});
server.on('error', function () {
  
});
worker.on('error', function () {

});
worker.on('close', function () {
  worker = require('child_process').fork(__dirname + '/webServer.js',[],{
    silent:true
  });
});

function condenser (buffer) {
  if (!buffer) {return buffer;}
  buffer = buffer.toString('utf-8');
  var address = IPS.ipv4 + ':'+ condenser.port;
  var injectedScript = '<script>window.$ADDRESS$="' + address + '";</script>\r\n<script charset="utf-8" src="http://' + address +'/assets/js/inject/console.js?client=client&t='+(+new Date)+'"></script>\r\n$&';
  var reScript = /.*?\<script\s+/im;
  var reTitle = /.*?\<title\s+/im;

  if (reScript.test(buffer)) {
    buffer = buffer.replace(reScript, injectedScript);
  } else if (reTitle.test(buffer)) {
    buffer = buffer.replace(reTitle, injectedScript);
  } else {
    buffer = injectedScript + buffer;
  }
  return buffer;
}
exports = module.exports = function (hostname) {
  var express = require('express');
  var webroot = path.join(__dirname, '/../www/');
  var debug = require('debug')('condenser:app');
  var app = express().
    use(express.static(path.join(webroot, '/assets/'))).
    use(function (req, res) {
      var file = path.join(webroot, '/views/',req.url);
      var extname = path.extname(file);
      if (!extname) {
        if (file.slice(-1) === '/') {
          file = path.join(file, '/index.html');
        } else {
          file += '.html';
        }
      } else {
        file = file.replace(new RegExp('\\' + extname+'$','i'), '.html');
      }
      debug('File is %s and extname is %s ',file, extname);
      res.sendfile(file);
    });

  function inspector(req, res, next) {
    if (req.headers.host === hostname) {
      return app(req, res);
    }
    next()
  };
  inspector.inject = inject;
  inspector.connect = connect;
  return inspector;
  function inject(buffer, localAddress) {
    if (!buffer) {return buffer}
    buffer = buffer.toString('utf-8');
    if (!buffer.trim().match(/^\<\!DOCTYPE/i)){return buffer;}
    var filepath = 'http://' + hostname +'/js/inject/console.js?client=client&t='+(+new Date);
    var injectedScript = '<script>window.$ADDRESS$="' + localAddress + '";</script>\r\n<script charset="utf-8" src="'+filepath+'"></script>\r\n';
    var index = buffer.indexOf('<script');
    if (index != -1) {
      var _prestr = buffer.substr(0, index);
      var _sufstr = buffer.substr(index);
      return _prestr + injectedScript + _sufstr;
    } else if ((index = buffer.indexOf('</title>')) != -1) {
      index = index + '</title>'.length;
      var _prestr = buffer.substr(0, index);
      var _sufstr = buffer.substr(index);
      return _prestr + injectedScript + _sufstr;
    }
    return buffer;
  }
  function connect (server) {
    var wss = require(__dirname + '/ws.js')(server);
    server.on('connection', function (socket) {
      socket.setTimeout(10000);
    });
    var msgCache = [];
    wss.on('send2client', function (msg) {
      msgCache.push(msg);
    });
    return wss;
  }
};
exports.listen = function (port) {
  server.listen((port = port || 12345));
  condenser.port = server.port = port;
  condenser.server = server;
  condenser.inject = condenser;
  // forked
  console.log('WebSocket started at port \x1B[36m%s\x1B[39m', port);
  return condenser;
};