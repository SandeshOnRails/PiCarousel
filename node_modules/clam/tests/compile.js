var assert = require('assert');
var fs = require('fs');
var path = require('path');
var prjDir = path.join(__dirname, 'compile');
var compile = require('../lib/compile.js');
var debug = require('debug')('compile test');
var modDir = path.join(prjDir, 'mods');

var op = {
    cdnPath : 'http://a.tbcdn.cn/apps'
};

describe('编译为线上格式', function(){
//    describe('当前目录引用', function(){
//        it('简单模块SSI内容', function(){
//            var page = path.join(prjDir,'pages','direct.html');
//            debug('Html文件路径:',page);
//            var v = compile.ssi(page, '/direct.html',[],op);
//            var exp = fs.readFileSync(path.join(prjDir, 'expect', 'direct.html'));
//            assert.equal(exp, v);
//        });
//        it('模块嵌套模块', function(){
//            var page = path.join(prjDir,'pages','nest.html');
//            debug('Html文件路径:',page);
//            var v = compile.ssi(page, '/nest.html',[modDir],op);
//            var exp = fs.readFileSync(path.join(prjDir, 'expect', 'nest.html'));
//            assert.equal(exp, v);
//        });
//
//    });
//
//    describe('模块库', function(){
//        it('简单引用', function(){
//            var page = path.join(prjDir,'pages','lib.html');
//
//            debug('Html文件路径:',page);
//            var v = compile.ssi(page, '/lib.html',[modDir],op);
//            debug('Html文件内容:', v);
//            var exp = fs.readFileSync(path.join(prjDir, 'expect', 'lib.html'));
//            assert.equal(exp, v);
//        });
//
//        it('嵌套引用模块库中的模块', function(){
//            var page = path.join(prjDir,'pages','libnest.html');
//            debug('Html文件路径:',page);
//            var v = compile.ssi(page, '/libnest.html',[modDir],op);
//            var exp = fs.readFileSync(path.join(prjDir, 'expect', 'libnest.html'));
//            assert.equal(exp, v);
//        });
//        it('模块库中的模块按照当前目录引用本地模块', function(){
//            var page = path.join(prjDir,'pages','liblocal.html');
//            debug('Html文件路径:',page);
//            var v = compile.ssi(page, '/aaa/bbb/ccc/liblocal.html',[modDir],op);
//            var exp = fs.readFileSync(path.join(prjDir, 'expect', 'liblocal.html'));
//            assert.equal(exp, v);
//        });
//    });

    describe('抽出资源', function(){
       it('抽出脚本', function(){
           var page = path.join(prjDir,'pages','direct.html');
           debug('Html文件路径:',page);
           var v = compile.render(page, '/direct.html',[],op);
           debug('render后内容:%s', v);
           //var exp = fs.readFileSync(path.join(prjDir, 'expect', 'direct_rendered.html'));
           //assert.equal(exp, v);
       });
    });
})
