var config = require('./config.js');
var fs  = require('fs');
var util = require('util');
var path = require('path');
var walker = require('./util/walk.js');
var debug = require('debug')('clam:getMixedMockDate');

var ifDatas = {};
var global = {};

function initFromIF(){
    var root = config.root();
    var dataPath = path.join(root,'.clam/data');
    if(!fs.existsSync(dataPath)){
        return;
    }
    var files = walker.walkSync(dataPath);

    for(var i = 0; i < files.length; i++){
        var file = files[i];
        if(path.extname(file) !== '.js'){
            continue;
        }
        var ifData = require(file);
        var url = '';
        if(ifData.config && ifData.config.url){
            url = ifData.config.url;
        }
        else{
            url = path.relative(dataPath, file);
            url = '/' + path.basename(url, '.js');
        }
        
        ifDatas[url] = ifData;
    }
    
}

function init(){
    ifDatas = {};
    global = {};
    var prjMockData = config.get('mock');
    if(!prjMockData){
        config.set('mock', {});
        prjMockData = {};
    }
    global = prjMockData;
    initFromIF();
}
init();
function getMixedMockDate(param, url, isRootPage){
    if(!param){
        param = {};
    }
    
    if(global){
        for(var prop in global){
            if(param[prop]){
                continue;
            }
            param[prop] = global[prop];
        }    
    }
    param['_pageUrl'] = url;
    param['_pageBaseName'] = path.basename(url);
    if(!isRootPage){
        return param;
    }
    if(!ifDatas[url]){
        return param;
    }
    var urlData = ifDatas[url].response;
    if(urlData){
        for(var ifProp in urlData){
            if(param[ifProp]){
                continue;
            }
            param[ifProp] = urlData[ifProp];
        }
    }
    debug('页面最终内容%s',url, util.inspect(param));
    return param;
}

exports.getMixedMockDate = getMixedMockDate;