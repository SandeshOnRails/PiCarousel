var path = require('path');
var fs = require('fs');
var mkdirp = require('mkdirp');
var isUtf8 = require('is-utf8');
var debug = require('debug')('template');
var J = require("juicer");
var iconv = require('iconv-lite');
var config = require('./config.js');

function init(){
    var userHome = process.env.HOME || process.env.HOMEPATH;//兼容windows
    var cacheDir = path.join(userHome, '.clamconfig/templates/default');
    if(fs.existsSync(cacheDir)){
        return;
    }
    mkdirp.sync(cacheDir);
    var sourceRoot = path.join(__dirname,'../resource');
    function copyFn(file){
        debug('复制默认模板文件%s', path.basename(file));
        var dir = path.dirname(file);
        var relative = path.relative(sourceRoot, dir);
        var destDir = path.join(cacheDir, relative);
        mkdirp.sync(destDir);
        var srcFile = fs.readFileSync(file);
        var destFilePath = path.join(destDir, path.basename(file));
        fs.writeFileSync(destFilePath, srcFile);
    }
    eachFile(sourceRoot, copyFn);
}

/**
 * 转换源模板目录到目标目录
 *   1.遍历所有源目录的文件，并用模板引擎处理
 *   2.如果源目录有主文件名为"template"的，就改为destName
 *   3.复制到目标目录
 * @param src     源目录
 * @param dest    目标目录
 * @param param   模板所需参数
 * @param destName  创建的目标文件名称
 */
function convert(src, dest, param, destName){
    eachFile(src, function(file){
        var tmplContent = fs.readFileSync(file);

        //探测并转换文本内容编码
        var utf8 = isUtf8(tmplContent);
        if (utf8) {
            tmplContent = tmplContent.toString();
        }
        else {
            tmplContent = iconv.decode(tmplContent, 'gbk');
        }

        //模板处理引擎
        var pageContent = J(tmplContent, param);

        //复制到destDir并且处理编码问题
        var dir = path.dirname(file);
        var relative = path.relative(src, dir);
        var destDir = path.join(dest, relative);
        mkdirp.sync(destDir);
        destName = path.basename(destName);
        var destFilePath = path.basename(file).replace(/template(\..*)/, destName+'$1');
        destFilePath = path.join(destDir, destFilePath);
        var c = iconv.encode(pageContent,config.get('project').charset[0]);
        fs.writeFileSync(destFilePath, c);
        fs.chmodSync(destFilePath, "777");
    });
}

/**
 * 递归便利目录，调用回调函数
 * @param dir 目录
 * @param fn  回调函数
 */
function eachFile(dir, fn){
    var files = fs.readdirSync(dir);
    files.forEach(function(file){
        var pathname = path.join(dir, file);
        var stat = fs.lstatSync(pathname);

        if (stat.isDirectory()){
            eachFile(pathname, fn);
            return;
        }
        fn(pathname);
    });
}

exports.init = init;
exports.convert = convert;