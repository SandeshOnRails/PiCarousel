#!/usr/bin/env node

var http = require('http');
var project = require('../lib/project.js');
var config = require('../lib/config.js');
var path = require('path');
var debug = require('debug')('clam:clam');
var template = require('../lib/template.js');
var mod = require('../lib/mod.js');
var page = require('../lib/page.js');
var widget = require('../lib/widget.js');
var packageJSON = require(__dirname + '/../package.json');

try {
  var updateNotifier = require("update-notifier");
  updateNotifier({pkg: packageJSON}).notify();
}
catch (e) {
}

config.init();
template.init();

var program = require('commander');
var helpInfo = {
  '--root': ['项目目录，如果指定的不是项目目录，将从此目录向上寻找最近的项目目录。', 'Project directory.'],
  '--data': ['以Json格式表示的传入数据，在不同的命令中要求不一样', 'Passed data that formatted with JSON. It\'s different mean from each command.'],
  '--charset': ['项目文件编码。调试服务器输出编码，只能为utf-8或者gbk，默认为gbk', 'Project charset'],
  'init': ['初始化项目目录。', 'Init project directory'],
  'mod': ['创建模块\n 使用方法:\n `clam mod <模块名称> [模板名]`', 'Module related'],
  'page': ['创建页面\n 使用方法:\n `clam page <页面名称> [模板名]`', 'Page related'],
  'widget': ['创建组件\n 使用方法:\n `clam widget <页面名称> [模板名]`', 'Widget related'],
  'on': ['启动项目调试服务器', 'Start up project debug server.'],
  '--port': ['调试服务启动的HTTP端口，默认是80。', 'debug server port,deault is 80'],
  '--sport': ['调试服务启动的HTTPS端口，默认是443。', 'debug server port,deault is 443']
};

var errInfo = {
  '--data': ['--data 参数必须为Json格式。', 'parameter --data must be a Json format.']
}

function jsonParse(val) {
  try {
    JSON.parse(val);
  }
  catch (e) {
    throw errInfo['--data'][lang];
  }
}

function charsetParse(val) {
  if (val === 'gbk') return 'gbk';
  return 'utf-8';
}

var lang = process.env.LANG || 'zh';
lang = (lang.indexOf('zh') === 0) ? 0 : 1;
program
  .version(packageJSON.version)
  .option('-r, --root <path>', helpInfo['--root'][lang])
  .option('-d, --data <json>', helpInfo['--data'][lang], jsonParse)
  .option('-p, --port <port>', helpInfo['--port'][lang])
  .option('-P, --sport <sport>', helpInfo['--sport'][lang])
  .option('-c, --charset <utf-8 | gbk>', helpInfo['--charset'][lang], charsetParse)
  .option('-b, --basepath <path>');


program
  .command('init')
  .description(helpInfo['init'][lang])
  .action(function () {
    var info = program.data ? program.data : {};
    var ret = project(info);

    ret.data.forEach(function (ac) {
      debug(ac.action, ac.content);
    });
    process.exit(0);
  });

program
  .command('mod <modname> [template]')
  .description(helpInfo['mod'][lang])
  .action(function (modname, template) {
    debug('exec mod "%s" "%s"', modname, template);
    mod.add(modname, '', template);
    process.exit(0);
  });

program
  .command('page <pagename> [template]')
  .description(helpInfo['page'][lang])
  .action(function (pagename, template) {
    page.add(pagename, '', '', template);
    process.exit(0);
  });

program
  .command('widget <widgetname> [template]')
  .description(helpInfo['widget'][lang])
  .action(function (widgetname, template) {
    widget.add(widgetname, '', template);
    process.exit(0);
  });

program
  .command('on')
  .description(helpInfo['on'][lang])
  .action(function (cmd) {
    var prjInfo = config.get('project');
    if (!prjInfo) {
      console.log('Execute "clam init".');
      return;
    }

    var startServer = require('../lib/server.js');
    startServer((cmd === 'wap'), program.basepath, program.port, program.sport);
  });

program.parse(process.argv);
